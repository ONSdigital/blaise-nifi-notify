steps:
  - name: "gcr.io/cloud-builders/gcloud"
    id: "create zip from source"
    entrypoint: "/bin/bash"
    args:
      - "-c"
      - |
        set -x && \
        apt-get update && \
        apt-get install -y zip && \
        ls && \
        zip -r /mnt/data/blaise-publish-bucket-metadata.zip ./*
    volumes:
      - name: "data"
        path: /mnt/data

  - name: "gcr.io/cloud-builders/gcloud"
    id: "push zip to functions source bucket"
    entrypoint: "/bin/bash"
    args:
      - "-c"
      - |
        gsutil cp /mnt/data/blaise-publish-bucket-metadata.zip gs://$PROJECT_ID-cloud-functions-source/
    volumes:
      - name: "data"
        path: /mnt/data

  - name: 'gcr.io/cloud-builders/gcloud'
    id: Create function
    args:
    - functions
    - deploy
    - publishMsg 
    - --source=gs://$PROJECT_ID-cloud-functions-source/blaise-publish-bucket-metadata.zip 
    - --region=europe-west2 
    - --runtime=python37 
    - --trigger-bucket=$PROJECT_ID-nifi
    - --set-env-vars=ON-PREM-SUBFOLDER=BL5-$_ENV,PROJECT_ID=$PROJECT_ID,TOPIC_NAME=$PROJECT_ID-export-topic,ENV=$_ENV
    
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Slack Notify"
    waitFor: ["Create function"]
    entrypoint: "/bin/bash"
    args:
      - "-c"
      - |
        python3 -u slack/slack-notify.py;
    env:
      - 'PROJECT_ID=$PROJECT_ID'
      - 'BUILD_ID=$BUILD_ID'
      - 'REPO_NAME=$REPO_NAME'
      - 'COMMIT_SHA=$COMMIT_SHA'
      - 'SHORT_SHA=$SHORT_SHA'
      - 'SLACK_CHANNEL=$_SLACK_CHANNEL'
      - 'SLACK_WEBHOOK=$_SLACK_WEBHOOK'
